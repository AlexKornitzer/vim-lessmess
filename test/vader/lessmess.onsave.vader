"            MIT License
"
" Copyright (c) 2017 Mohamed Boughaba
"
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
"
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
"
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.
"
" Author: Mohamed Boughaba
" Repository: https://github.com/mboughaba/vim-lessmess
" Description: This plugin removes all empty white-spaces in a file
"
"
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Case 7
"
Execute (lessmess should preserve user configuration):
------------------------------------------------------
  Assert exists("g:enable_lessmess_onsave"), "User configuration shouldn't be changed"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"
Before (Initialize):
--------------------

After (Initialize):
-------------------

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Case 8
"
"
Execute (lessmess should set and preserve user settings):
---------------------------------------------------------
  sil cal lessmess#LessmessExecute(0)
  Assert !&list
  AssertEqual 250, &updatetime, "updatetime option should have been customized"
  AssertEqual "tab:▸\ ,trail:-,extends:>,precedes:<,nbsp:⎵,eol:¬", &listchars, "listchars options should have been preserved"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" We need to adapt the paste setting to test mixed indent
" We will enable plugin onsave
Before (Initialize):
--------------------
  setl paste

After (Initialize):
-------------------
  setl nopaste

Given (messless text):
----------------------
  Whitespaces are messy, I need to clean them because why not
  Whitespaces are messy, I need to clean them because why not

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Case 9
"
" Go to the end of file
" open a new line after and append some text
" We make sure to add a bunch of trailing whitespaces
" at the end of the line
Do (Insert trailing whitespaces):
----------------------------------
  Goopen new line after then add a bunch of whitespace at the end              \<Esc>
  :doautocmd CursorHold\<CR>
  :doautocmd BufWritePre\<CR>

Then (lessmess should remove trailing whitespaces onsave):
-----------------------------------------------------------

Expect (No more trailing whitespaces):
---------------------------------------
  Whitespaces are messy, I need to clean them because why not
  Whitespaces are messy, I need to clean them because why not
  open new line after then add a bunch of whitespace at the end

Given (messless text):
----------------------
  // Reasons

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Case 10
"
" Go to the end of file
" open new line after
" insert dummy code on multiple lines
" We make sure set paste is on to be able to add mixed indent
" indentation is then added with Tab key
Do (Insert mixed indent):
-------------------------
  Goif !found('life')\<CR>    \<Tab>find('life');\<Esc>
  :setl nopaste\<CR>
  :doautocmd CursorHold\<CR>
  :doautocmd BufWritePre\<CR>

Then (lessmess should fix mixed indent onsave):
-----------------------------------------------

Expect (No more mixed indent):
-----------------------------
  // Reasons
  if !found('life')
          find('life');

Given (messless text):
----------------------
  Empty newlines at the EOF are evil, I need to clean them

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Case 11
"
" Go to the end of file
" open a bunch of new lines after
Do (Insert newlines at the end of file):
----------------------------------------
  ggo\<CR>\<CR>\<CR>\<CR>\<CR>\<CR>\<CR>\<Esc>
  :doautocmd CursorHold\<CR>
  :doautocmd BufWritePre\<CR>

Then (lessmess should remove newlines at the end of the file onsave):
---------------------------------------------------------------------

Expect (No more empty lines at the EOF):
----------------------------------------
  Empty newlines at the EOF are evil, I need to clean them

